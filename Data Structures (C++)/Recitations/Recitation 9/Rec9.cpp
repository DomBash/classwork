#include <iostream>
//include correct libraries

//Dominic B
//I added a count to each of the loops in the sort algorithms
//I found that the quicksort was the fastest and most efficient for both small and large arrays

using namespace std;

int quickSort(int arr[], int left, int right, int count) {
    int i = left, j = right;
    int tmp;
    int pivot = arr[(left + right) / 2];
    
    /* partition */
    while (i <= j) {
		count++;
        while (arr[i] < pivot)
        //count++;
            i++;
        while (arr[j] > pivot)
        //count++;
            j--;
        if (i <= j) {
            tmp = arr[i];
            arr[i] = arr[j];
            arr[j] = tmp;
            i++;
            j--;
        }
    };
    
    /* recursion */
    if (left < j)
        //count++;
        quickSort(arr, left, j,count);
    if (i < right)
        //count++;
        quickSort(arr, i, right,count);
        
    return count;
}

int selectSort(int arr[], int n, int count) {

  int index_min_value;
  int temp;
  for (int i=0; i<n-1; i++) {
	  count++;
  // outer loop tracks the sorted portion of the list
    index_min_value = i; //set index_min_value to the current index of array
    for (int j=i+1; j < n; j++) // inner loop finds the next smallest value
    {
		count++;
      if (arr[j] < arr[index_min_value])
        index_min_value = j;

    }
    if (index_min_value != i) {
      temp = arr[i];
      arr[i] = arr[index_min_value];
      arr[index_min_value] = temp;
    }
  }
  return count;
}

int insertionSort (int arr[], int length, int count) {
  int j, temp;
  for (int i = 0; i < length; i++)  {
	  count++;
      j = i;
      while (j > 0 && arr[j] < arr[j-1])
      { // move elements over until find the position for next element
		  count++;
        temp = arr[j];
        arr[j] = arr[j-1];
        arr[j-1] = temp;
        j--;
      }
  }
  return count;
}

void swap(int *xp, int *yp) {
  int temp = *xp;
  *xp = *yp;
  *yp = temp;
}

int bubbleSort(int arr[], int n, int count) {

  int i, j;
  for (i = 0; i < n-1; i++) {// Last i elements are already in place
	  count ++;
    for (j = 0; j < n-i-1; j++){
		count++;
      if (arr[j] > arr[j+1]){
        swap(&arr[j], &arr[j+1]);
      }
    }
  }
  return count;
}

void printList(int arr[], int length){
  for (int i = 0; i<length; i++){
    cout<<arr[i]<<" ";
  }
  cout<<endl;
}

int main(){
  //HINT: You should place a counter into each algorithm to see how many time each of them run. Then you can compare them easier. 
  //You should use the given print statements for better organization. 

  int myArray1[] = {12, 13, 5, 4, 7, 18, 9 };
  int myArray2[] = {12, 13, 5, 4, 7, 18, 9 };
  int myArray3[] = {12, 13, 5, 4, 7, 18, 9 };
  int myArray4[] = {12, 13, 5, 4, 7, 18, 9 };
  
  int count = 0;

  cout << endl;
  cout << " ======== Small array ======= " << endl;
  cout << endl;

  cout<<"My original small array is: "<<endl;
  printList(myArray1,7);

  //selectSort
  count = selectSort(myArray1,7,count);
  cout<<"When ordered with selectSort, after "<<count<<" operations the result is: "<<endl;
  printList(myArray1,7);
  count = 0;

  //insertionSort
  count = insertionSort(myArray2,7,count);
  cout<<"When ordered with insertionSort, after " << count << " operations the result is: " << endl;
  printList(myArray2,7);
  count = 0;

  //bubbleSort
  count = bubbleSort(myArray3,7,count);
  cout<<"When ordered with bubbleSort, after "<<count<<" operations the result is: "<<endl;
  printList(myArray3,7);
  count = 0;

  //quickSort
  count = quickSort(myArray4,0,6,count);
  cout<<"When ordered with quickSort, after "<<count<<" operations the result is: "<<endl;
  printList(myArray4,7);
  count = 0;
  
  int myArray5 [] = {601, 221, 376, 422, 193, 569, 799, 935, 659, 848, 863, 151, 240, 703, 406, 936,  17, 457, 427, 368,   5, 235, 546,  61, 599,  47, 434, 761, 553,  63, 653, 910, 409, 494, 570, 968, 107, 134, 106, 706, 540, 890, 387, 736, 356, 700, 748, 600, 552, 829, 276, 702, 435, 479, 993, 113,   8, 275, 583, 580, 687, 177, 810, 410, 152, 529, 137, 690,  19, 596, 654, 187, 327, 668, 573, 504, 361, 830, 477, 525, 390,  43,  87, 644, 317, 722, 811, 835, 373, 905, 443, 314, 692, 796, 841, 948, 402, 408, 613, 595, 321, 256, 866, 320,  78, 938, 432, 491, 645, 981, 724, 159, 244, 716, 606, 393, 513, 875, 967, 874, 141, 647, 623, 889,  34, 535, 507, 191, 871,  86, 581, 624, 941, 330,  94, 804, 954,  38, 486, 897, 149, 357, 250, 663,  48, 515, 779, 346, 548,1000, 480, 150,  90, 545, 532, 564, 334, 741,  49, 184,  95, 259, 302, 809, 826, 266, 984, 277, 296, 693, 389, 352, 260,  29,  31, 769, 172, 562, 518, 952, 898, 165, 297, 306, 836, 118,   3, 343, 786, 713, 849, 144, 886, 534, 832,  96, 174, 620, 139, 124,   6, 444, 825, 677,  59, 284, 171, 496, 917, 482,  75, 902, 845, 381, 793,   7, 397, 348, 602, 472, 974, 997,  21,  56, 220, 103,  36,  24, 855, 442, 740, 930, 325, 846, 168, 676, 903, 909, 204,  62, 916, 979, 386, 145, 478, 738, 114, 162,  28, 999, 102, 619, 862, 876, 774, 787, 790, 944, 213, 121, 823, 315, 461, 178, 287, 975, 502, 691, 281, 603, 568, 597, 155,  25, 900,  58, 400, 646, 501, 258, 755, 253, 436, 650, 454, 877, 870, 188, 828, 655, 506, 666, 520, 856, 970, 326, 852, 483,  16,  67, 367, 414, 726, 735, 872, 683, 771, 951, 136, 685, 684, 586, 712,  89, 756, 923, 953, 278, 699, 407, 777, 234, 621, 190, 577, 424, 584, 286, 689, 249, 311, 263, 994, 183,  46, 717, 567, 681, 537, 375, 138, 887, 195, 370,  82,  42, 161, 550,  64, 380,  65, 762, 447, 512, 228, 232, 294, 800, 469,  60,  45, 914, 985,   1, 423,  37, 696, 695, 378, 660, 470,  88, 108, 179, 319, 813, 803,   9, 270, 488, 652, 366,  83, 995, 448, 988, 365, 822, 858, 135, 919, 682, 132, 664, 342, 637, 421, 751, 744, 864, 806, 680, 126, 446, 127, 656, 709, 591, 416, 635,  55, 833, 503, 881, 572, 851, 209, 392, 122, 739, 819, 598, 907, 912, 801, 272, 173,  30, 765, 947, 199, 729, 216, 971, 622,  44, 438, 236, 798, 131, 498, 524, 728, 198, 745, 926, 185, 420, 961, 429, 404, 665, 734, 575, 508, 788, 571, 293, 924, 205, 661, 792, 539, 784, 791,  54, 758, 998, 815, 719, 521, 194, 363, 816, 133, 239, 142, 476, 831, 340, 908, 982, 554, 737, 992, 675, 956, 485, 587, 555, 783,  91, 608, 565, 289, 459, 214, 109, 242,  69, 526, 658, 523, 780, 772, 807, 921, 721, 229, 490, 715, 223, 473, 495, 893, 157, 336, 928, 395, 123, 146, 451, 295, 720, 265, 117, 283, 298, 946, 868, 578, 972,  26, 937, 301,  11, 460, 111, 743,   2, 859, 932, 140, 280, 760, 590, 163, 230, 817, 238, 285,  10,  27, 505, 335, 808, 955, 462, 509, 355, 274, 212, 549, 353, 588, 538, 730, 966, 667, 130, 714, 942, 166, 215, 257, 797,  76, 516, 983, 827, 541, 582, 561, 899, 865, 757, 609, 430, 853, 563, 618, 911, 398, 154, 441, 371, 861, 218, 925, 648,  41, 465, 605, 489, 328, 452, 202,  80,  74, 904,  33, 574, 557, 701, 243, 594, 112, 628, 630, 963, 593, 203, 527, 487, 733, 119, 167, 847, 120, 522, 329, 768, 449, 824, 385,  71, 500, 543, 233, 915, 338, 878, 231, 976, 727, 324,  81, 458, 987, 873, 530, 842, 764,  66, 362, 615, 261, 837, 344, 794,  98,  57, 207, 440, 843, 950, 170, 341,  52, 918, 403, 752, 415, 484,  84,  40, 883, 153, 965, 879, 299, 559, 394, 308, 636, 474, 388, 589, 411, 217,  23, 854, 186, 576, 492, 814, 566, 888, 850, 425, 514, 322, 770,  35, 895, 940, 464, 247, 237, 105, 360, 455, 310, 426,  14, 219, 785, 805, 255, 639, 531, 747, 369, 475, 350, 359, 224,  20, 331, 986, 857, 251, 312, 753, 358, 674, 345,  97, 519, 463, 957, 933, 980, 710, 169,  92, 781, 208, 347, 913, 616, 973, 316, 614, 838, 617, 673, 471, 201, 379, 931, 303, 418, 180, 450,  99, 920, 802, 821, 300, 533, 633,  12, 264,  79, 767,  13,   4, 991, 891, 445, 197, 922, 433,  77, 116, 818, 413,  93, 708, 592, 558, 101, 651, 252, 453, 200, 754, 672, 210, 182, 307, 795, 929, 844, 290, 332, 318, 732, 246,  70, 959, 789, 269, 943, 669,  15, 254, 839, 104, 723, 867, 686, 305, 181, 551, 634, 547,  18, 627, 884, 291, 749, 544, 245,  22, 610, 560, 725, 241, 273, 125,  39,  73, 880, 351,  85,  68, 642, 309, 892, 969, 405, 377, 511, 158, 649, 412, 759, 641, 354, 820, 468, 671, 364, 419, 192, 704,  51, 337, 481, 901, 143, 763,  50, 776, 536, 731, 510, 746, 778, 638, 304, 262, 147, 989, 996, 977, 657, 882, 894, 585, 629, 467, 640, 271, 939, 437, 688, 493, 697, 978, 466, 542, 604, 885, 812, 990, 662, 960, 949, 711, 384, 129, 267, 927, 694, 110, 528, 962, 707, 643, 869, 225, 248, 206, 374, 100, 750, 773, 766, 718, 175, 517, 964, 958, 196, 705, 439, 396, 417,  72, 313, 401, 372, 834, 156, 399, 934, 579, 160, 227,  53, 631, 611, 148, 499, 456, 775, 428, 945, 339, 176, 323, 626, 226, 742, 333, 292, 288, 164,  32, 679, 189, 497, 782, 383, 115, 840, 625, 896, 128, 211, 860, 279, 678, 431, 698, 632, 391, 607, 282, 670, 349, 382, 556, 222, 612, 268, 906};
  int myArray6 [] = {601, 221, 376, 422, 193, 569, 799, 935, 659, 848, 863, 151, 240, 703, 406, 936,  17, 457, 427, 368,   5, 235, 546,  61, 599,  47, 434, 761, 553,  63, 653, 910, 409, 494, 570, 968, 107, 134, 106, 706, 540, 890, 387, 736, 356, 700, 748, 600, 552, 829, 276, 702, 435, 479, 993, 113,   8, 275, 583, 580, 687, 177, 810, 410, 152, 529, 137, 690,  19, 596, 654, 187, 327, 668, 573, 504, 361, 830, 477, 525, 390,  43,  87, 644, 317, 722, 811, 835, 373, 905, 443, 314, 692, 796, 841, 948, 402, 408, 613, 595, 321, 256, 866, 320,  78, 938, 432, 491, 645, 981, 724, 159, 244, 716, 606, 393, 513, 875, 967, 874, 141, 647, 623, 889,  34, 535, 507, 191, 871,  86, 581, 624, 941, 330,  94, 804, 954,  38, 486, 897, 149, 357, 250, 663,  48, 515, 779, 346, 548,1000, 480, 150,  90, 545, 532, 564, 334, 741,  49, 184,  95, 259, 302, 809, 826, 266, 984, 277, 296, 693, 389, 352, 260,  29,  31, 769, 172, 562, 518, 952, 898, 165, 297, 306, 836, 118,   3, 343, 786, 713, 849, 144, 886, 534, 832,  96, 174, 620, 139, 124,   6, 444, 825, 677,  59, 284, 171, 496, 917, 482,  75, 902, 845, 381, 793,   7, 397, 348, 602, 472, 974, 997,  21,  56, 220, 103,  36,  24, 855, 442, 740, 930, 325, 846, 168, 676, 903, 909, 204,  62, 916, 979, 386, 145, 478, 738, 114, 162,  28, 999, 102, 619, 862, 876, 774, 787, 790, 944, 213, 121, 823, 315, 461, 178, 287, 975, 502, 691, 281, 603, 568, 597, 155,  25, 900,  58, 400, 646, 501, 258, 755, 253, 436, 650, 454, 877, 870, 188, 828, 655, 506, 666, 520, 856, 970, 326, 852, 483,  16,  67, 367, 414, 726, 735, 872, 683, 771, 951, 136, 685, 684, 586, 712,  89, 756, 923, 953, 278, 699, 407, 777, 234, 621, 190, 577, 424, 584, 286, 689, 249, 311, 263, 994, 183,  46, 717, 567, 681, 537, 375, 138, 887, 195, 370,  82,  42, 161, 550,  64, 380,  65, 762, 447, 512, 228, 232, 294, 800, 469,  60,  45, 914, 985,   1, 423,  37, 696, 695, 378, 660, 470,  88, 108, 179, 319, 813, 803,   9, 270, 488, 652, 366,  83, 995, 448, 988, 365, 822, 858, 135, 919, 682, 132, 664, 342, 637, 421, 751, 744, 864, 806, 680, 126, 446, 127, 656, 709, 591, 416, 635,  55, 833, 503, 881, 572, 851, 209, 392, 122, 739, 819, 598, 907, 912, 801, 272, 173,  30, 765, 947, 199, 729, 216, 971, 622,  44, 438, 236, 798, 131, 498, 524, 728, 198, 745, 926, 185, 420, 961, 429, 404, 665, 734, 575, 508, 788, 571, 293, 924, 205, 661, 792, 539, 784, 791,  54, 758, 998, 815, 719, 521, 194, 363, 816, 133, 239, 142, 476, 831, 340, 908, 982, 554, 737, 992, 675, 956, 485, 587, 555, 783,  91, 608, 565, 289, 459, 214, 109, 242,  69, 526, 658, 523, 780, 772, 807, 921, 721, 229, 490, 715, 223, 473, 495, 893, 157, 336, 928, 395, 123, 146, 451, 295, 720, 265, 117, 283, 298, 946, 868, 578, 972,  26, 937, 301,  11, 460, 111, 743,   2, 859, 932, 140, 280, 760, 590, 163, 230, 817, 238, 285,  10,  27, 505, 335, 808, 955, 462, 509, 355, 274, 212, 549, 353, 588, 538, 730, 966, 667, 130, 714, 942, 166, 215, 257, 797,  76, 516, 983, 827, 541, 582, 561, 899, 865, 757, 609, 430, 853, 563, 618, 911, 398, 154, 441, 371, 861, 218, 925, 648,  41, 465, 605, 489, 328, 452, 202,  80,  74, 904,  33, 574, 557, 701, 243, 594, 112, 628, 630, 963, 593, 203, 527, 487, 733, 119, 167, 847, 120, 522, 329, 768, 449, 824, 385,  71, 500, 543, 233, 915, 338, 878, 231, 976, 727, 324,  81, 458, 987, 873, 530, 842, 764,  66, 362, 615, 261, 837, 344, 794,  98,  57, 207, 440, 843, 950, 170, 341,  52, 918, 403, 752, 415, 484,  84,  40, 883, 153, 965, 879, 299, 559, 394, 308, 636, 474, 388, 589, 411, 217,  23, 854, 186, 576, 492, 814, 566, 888, 850, 425, 514, 322, 770,  35, 895, 940, 464, 247, 237, 105, 360, 455, 310, 426,  14, 219, 785, 805, 255, 639, 531, 747, 369, 475, 350, 359, 224,  20, 331, 986, 857, 251, 312, 753, 358, 674, 345,  97, 519, 463, 957, 933, 980, 710, 169,  92, 781, 208, 347, 913, 616, 973, 316, 614, 838, 617, 673, 471, 201, 379, 931, 303, 418, 180, 450,  99, 920, 802, 821, 300, 533, 633,  12, 264,  79, 767,  13,   4, 991, 891, 445, 197, 922, 433,  77, 116, 818, 413,  93, 708, 592, 558, 101, 651, 252, 453, 200, 754, 672, 210, 182, 307, 795, 929, 844, 290, 332, 318, 732, 246,  70, 959, 789, 269, 943, 669,  15, 254, 839, 104, 723, 867, 686, 305, 181, 551, 634, 547,  18, 627, 884, 291, 749, 544, 245,  22, 610, 560, 725, 241, 273, 125,  39,  73, 880, 351,  85,  68, 642, 309, 892, 969, 405, 377, 511, 158, 649, 412, 759, 641, 354, 820, 468, 671, 364, 419, 192, 704,  51, 337, 481, 901, 143, 763,  50, 776, 536, 731, 510, 746, 778, 638, 304, 262, 147, 989, 996, 977, 657, 882, 894, 585, 629, 467, 640, 271, 939, 437, 688, 493, 697, 978, 466, 542, 604, 885, 812, 990, 662, 960, 949, 711, 384, 129, 267, 927, 694, 110, 528, 962, 707, 643, 869, 225, 248, 206, 374, 100, 750, 773, 766, 718, 175, 517, 964, 958, 196, 705, 439, 396, 417,  72, 313, 401, 372, 834, 156, 399, 934, 579, 160, 227,  53, 631, 611, 148, 499, 456, 775, 428, 945, 339, 176, 323, 626, 226, 742, 333, 292, 288, 164,  32, 679, 189, 497, 782, 383, 115, 840, 625, 896, 128, 211, 860, 279, 678, 431, 698, 632, 391, 607, 282, 670, 349, 382, 556, 222, 612, 268, 906};
  int myArray7 [] = {601, 221, 376, 422, 193, 569, 799, 935, 659, 848, 863, 151, 240, 703, 406, 936,  17, 457, 427, 368,   5, 235, 546,  61, 599,  47, 434, 761, 553,  63, 653, 910, 409, 494, 570, 968, 107, 134, 106, 706, 540, 890, 387, 736, 356, 700, 748, 600, 552, 829, 276, 702, 435, 479, 993, 113,   8, 275, 583, 580, 687, 177, 810, 410, 152, 529, 137, 690,  19, 596, 654, 187, 327, 668, 573, 504, 361, 830, 477, 525, 390,  43,  87, 644, 317, 722, 811, 835, 373, 905, 443, 314, 692, 796, 841, 948, 402, 408, 613, 595, 321, 256, 866, 320,  78, 938, 432, 491, 645, 981, 724, 159, 244, 716, 606, 393, 513, 875, 967, 874, 141, 647, 623, 889,  34, 535, 507, 191, 871,  86, 581, 624, 941, 330,  94, 804, 954,  38, 486, 897, 149, 357, 250, 663,  48, 515, 779, 346, 548,1000, 480, 150,  90, 545, 532, 564, 334, 741,  49, 184,  95, 259, 302, 809, 826, 266, 984, 277, 296, 693, 389, 352, 260,  29,  31, 769, 172, 562, 518, 952, 898, 165, 297, 306, 836, 118,   3, 343, 786, 713, 849, 144, 886, 534, 832,  96, 174, 620, 139, 124,   6, 444, 825, 677,  59, 284, 171, 496, 917, 482,  75, 902, 845, 381, 793,   7, 397, 348, 602, 472, 974, 997,  21,  56, 220, 103,  36,  24, 855, 442, 740, 930, 325, 846, 168, 676, 903, 909, 204,  62, 916, 979, 386, 145, 478, 738, 114, 162,  28, 999, 102, 619, 862, 876, 774, 787, 790, 944, 213, 121, 823, 315, 461, 178, 287, 975, 502, 691, 281, 603, 568, 597, 155,  25, 900,  58, 400, 646, 501, 258, 755, 253, 436, 650, 454, 877, 870, 188, 828, 655, 506, 666, 520, 856, 970, 326, 852, 483,  16,  67, 367, 414, 726, 735, 872, 683, 771, 951, 136, 685, 684, 586, 712,  89, 756, 923, 953, 278, 699, 407, 777, 234, 621, 190, 577, 424, 584, 286, 689, 249, 311, 263, 994, 183,  46, 717, 567, 681, 537, 375, 138, 887, 195, 370,  82,  42, 161, 550,  64, 380,  65, 762, 447, 512, 228, 232, 294, 800, 469,  60,  45, 914, 985,   1, 423,  37, 696, 695, 378, 660, 470,  88, 108, 179, 319, 813, 803,   9, 270, 488, 652, 366,  83, 995, 448, 988, 365, 822, 858, 135, 919, 682, 132, 664, 342, 637, 421, 751, 744, 864, 806, 680, 126, 446, 127, 656, 709, 591, 416, 635,  55, 833, 503, 881, 572, 851, 209, 392, 122, 739, 819, 598, 907, 912, 801, 272, 173,  30, 765, 947, 199, 729, 216, 971, 622,  44, 438, 236, 798, 131, 498, 524, 728, 198, 745, 926, 185, 420, 961, 429, 404, 665, 734, 575, 508, 788, 571, 293, 924, 205, 661, 792, 539, 784, 791,  54, 758, 998, 815, 719, 521, 194, 363, 816, 133, 239, 142, 476, 831, 340, 908, 982, 554, 737, 992, 675, 956, 485, 587, 555, 783,  91, 608, 565, 289, 459, 214, 109, 242,  69, 526, 658, 523, 780, 772, 807, 921, 721, 229, 490, 715, 223, 473, 495, 893, 157, 336, 928, 395, 123, 146, 451, 295, 720, 265, 117, 283, 298, 946, 868, 578, 972,  26, 937, 301,  11, 460, 111, 743,   2, 859, 932, 140, 280, 760, 590, 163, 230, 817, 238, 285,  10,  27, 505, 335, 808, 955, 462, 509, 355, 274, 212, 549, 353, 588, 538, 730, 966, 667, 130, 714, 942, 166, 215, 257, 797,  76, 516, 983, 827, 541, 582, 561, 899, 865, 757, 609, 430, 853, 563, 618, 911, 398, 154, 441, 371, 861, 218, 925, 648,  41, 465, 605, 489, 328, 452, 202,  80,  74, 904,  33, 574, 557, 701, 243, 594, 112, 628, 630, 963, 593, 203, 527, 487, 733, 119, 167, 847, 120, 522, 329, 768, 449, 824, 385,  71, 500, 543, 233, 915, 338, 878, 231, 976, 727, 324,  81, 458, 987, 873, 530, 842, 764,  66, 362, 615, 261, 837, 344, 794,  98,  57, 207, 440, 843, 950, 170, 341,  52, 918, 403, 752, 415, 484,  84,  40, 883, 153, 965, 879, 299, 559, 394, 308, 636, 474, 388, 589, 411, 217,  23, 854, 186, 576, 492, 814, 566, 888, 850, 425, 514, 322, 770,  35, 895, 940, 464, 247, 237, 105, 360, 455, 310, 426,  14, 219, 785, 805, 255, 639, 531, 747, 369, 475, 350, 359, 224,  20, 331, 986, 857, 251, 312, 753, 358, 674, 345,  97, 519, 463, 957, 933, 980, 710, 169,  92, 781, 208, 347, 913, 616, 973, 316, 614, 838, 617, 673, 471, 201, 379, 931, 303, 418, 180, 450,  99, 920, 802, 821, 300, 533, 633,  12, 264,  79, 767,  13,   4, 991, 891, 445, 197, 922, 433,  77, 116, 818, 413,  93, 708, 592, 558, 101, 651, 252, 453, 200, 754, 672, 210, 182, 307, 795, 929, 844, 290, 332, 318, 732, 246,  70, 959, 789, 269, 943, 669,  15, 254, 839, 104, 723, 867, 686, 305, 181, 551, 634, 547,  18, 627, 884, 291, 749, 544, 245,  22, 610, 560, 725, 241, 273, 125,  39,  73, 880, 351,  85,  68, 642, 309, 892, 969, 405, 377, 511, 158, 649, 412, 759, 641, 354, 820, 468, 671, 364, 419, 192, 704,  51, 337, 481, 901, 143, 763,  50, 776, 536, 731, 510, 746, 778, 638, 304, 262, 147, 989, 996, 977, 657, 882, 894, 585, 629, 467, 640, 271, 939, 437, 688, 493, 697, 978, 466, 542, 604, 885, 812, 990, 662, 960, 949, 711, 384, 129, 267, 927, 694, 110, 528, 962, 707, 643, 869, 225, 248, 206, 374, 100, 750, 773, 766, 718, 175, 517, 964, 958, 196, 705, 439, 396, 417,  72, 313, 401, 372, 834, 156, 399, 934, 579, 160, 227,  53, 631, 611, 148, 499, 456, 775, 428, 945, 339, 176, 323, 626, 226, 742, 333, 292, 288, 164,  32, 679, 189, 497, 782, 383, 115, 840, 625, 896, 128, 211, 860, 279, 678, 431, 698, 632, 391, 607, 282, 670, 349, 382, 556, 222, 612, 268, 906};
  int myArray8 [] = {601, 221, 376, 422, 193, 569, 799, 935, 659, 848, 863, 151, 240, 703, 406, 936,  17, 457, 427, 368,   5, 235, 546,  61, 599,  47, 434, 761, 553,  63, 653, 910, 409, 494, 570, 968, 107, 134, 106, 706, 540, 890, 387, 736, 356, 700, 748, 600, 552, 829, 276, 702, 435, 479, 993, 113,   8, 275, 583, 580, 687, 177, 810, 410, 152, 529, 137, 690,  19, 596, 654, 187, 327, 668, 573, 504, 361, 830, 477, 525, 390,  43,  87, 644, 317, 722, 811, 835, 373, 905, 443, 314, 692, 796, 841, 948, 402, 408, 613, 595, 321, 256, 866, 320,  78, 938, 432, 491, 645, 981, 724, 159, 244, 716, 606, 393, 513, 875, 967, 874, 141, 647, 623, 889,  34, 535, 507, 191, 871,  86, 581, 624, 941, 330,  94, 804, 954,  38, 486, 897, 149, 357, 250, 663,  48, 515, 779, 346, 548,1000, 480, 150,  90, 545, 532, 564, 334, 741,  49, 184,  95, 259, 302, 809, 826, 266, 984, 277, 296, 693, 389, 352, 260,  29,  31, 769, 172, 562, 518, 952, 898, 165, 297, 306, 836, 118,   3, 343, 786, 713, 849, 144, 886, 534, 832,  96, 174, 620, 139, 124,   6, 444, 825, 677,  59, 284, 171, 496, 917, 482,  75, 902, 845, 381, 793,   7, 397, 348, 602, 472, 974, 997,  21,  56, 220, 103,  36,  24, 855, 442, 740, 930, 325, 846, 168, 676, 903, 909, 204,  62, 916, 979, 386, 145, 478, 738, 114, 162,  28, 999, 102, 619, 862, 876, 774, 787, 790, 944, 213, 121, 823, 315, 461, 178, 287, 975, 502, 691, 281, 603, 568, 597, 155,  25, 900,  58, 400, 646, 501, 258, 755, 253, 436, 650, 454, 877, 870, 188, 828, 655, 506, 666, 520, 856, 970, 326, 852, 483,  16,  67, 367, 414, 726, 735, 872, 683, 771, 951, 136, 685, 684, 586, 712,  89, 756, 923, 953, 278, 699, 407, 777, 234, 621, 190, 577, 424, 584, 286, 689, 249, 311, 263, 994, 183,  46, 717, 567, 681, 537, 375, 138, 887, 195, 370,  82,  42, 161, 550,  64, 380,  65, 762, 447, 512, 228, 232, 294, 800, 469,  60,  45, 914, 985,   1, 423,  37, 696, 695, 378, 660, 470,  88, 108, 179, 319, 813, 803,   9, 270, 488, 652, 366,  83, 995, 448, 988, 365, 822, 858, 135, 919, 682, 132, 664, 342, 637, 421, 751, 744, 864, 806, 680, 126, 446, 127, 656, 709, 591, 416, 635,  55, 833, 503, 881, 572, 851, 209, 392, 122, 739, 819, 598, 907, 912, 801, 272, 173,  30, 765, 947, 199, 729, 216, 971, 622,  44, 438, 236, 798, 131, 498, 524, 728, 198, 745, 926, 185, 420, 961, 429, 404, 665, 734, 575, 508, 788, 571, 293, 924, 205, 661, 792, 539, 784, 791,  54, 758, 998, 815, 719, 521, 194, 363, 816, 133, 239, 142, 476, 831, 340, 908, 982, 554, 737, 992, 675, 956, 485, 587, 555, 783,  91, 608, 565, 289, 459, 214, 109, 242,  69, 526, 658, 523, 780, 772, 807, 921, 721, 229, 490, 715, 223, 473, 495, 893, 157, 336, 928, 395, 123, 146, 451, 295, 720, 265, 117, 283, 298, 946, 868, 578, 972,  26, 937, 301,  11, 460, 111, 743,   2, 859, 932, 140, 280, 760, 590, 163, 230, 817, 238, 285,  10,  27, 505, 335, 808, 955, 462, 509, 355, 274, 212, 549, 353, 588, 538, 730, 966, 667, 130, 714, 942, 166, 215, 257, 797,  76, 516, 983, 827, 541, 582, 561, 899, 865, 757, 609, 430, 853, 563, 618, 911, 398, 154, 441, 371, 861, 218, 925, 648,  41, 465, 605, 489, 328, 452, 202,  80,  74, 904,  33, 574, 557, 701, 243, 594, 112, 628, 630, 963, 593, 203, 527, 487, 733, 119, 167, 847, 120, 522, 329, 768, 449, 824, 385,  71, 500, 543, 233, 915, 338, 878, 231, 976, 727, 324,  81, 458, 987, 873, 530, 842, 764,  66, 362, 615, 261, 837, 344, 794,  98,  57, 207, 440, 843, 950, 170, 341,  52, 918, 403, 752, 415, 484,  84,  40, 883, 153, 965, 879, 299, 559, 394, 308, 636, 474, 388, 589, 411, 217,  23, 854, 186, 576, 492, 814, 566, 888, 850, 425, 514, 322, 770,  35, 895, 940, 464, 247, 237, 105, 360, 455, 310, 426,  14, 219, 785, 805, 255, 639, 531, 747, 369, 475, 350, 359, 224,  20, 331, 986, 857, 251, 312, 753, 358, 674, 345,  97, 519, 463, 957, 933, 980, 710, 169,  92, 781, 208, 347, 913, 616, 973, 316, 614, 838, 617, 673, 471, 201, 379, 931, 303, 418, 180, 450,  99, 920, 802, 821, 300, 533, 633,  12, 264,  79, 767,  13,   4, 991, 891, 445, 197, 922, 433,  77, 116, 818, 413,  93, 708, 592, 558, 101, 651, 252, 453, 200, 754, 672, 210, 182, 307, 795, 929, 844, 290, 332, 318, 732, 246,  70, 959, 789, 269, 943, 669,  15, 254, 839, 104, 723, 867, 686, 305, 181, 551, 634, 547,  18, 627, 884, 291, 749, 544, 245,  22, 610, 560, 725, 241, 273, 125,  39,  73, 880, 351,  85,  68, 642, 309, 892, 969, 405, 377, 511, 158, 649, 412, 759, 641, 354, 820, 468, 671, 364, 419, 192, 704,  51, 337, 481, 901, 143, 763,  50, 776, 536, 731, 510, 746, 778, 638, 304, 262, 147, 989, 996, 977, 657, 882, 894, 585, 629, 467, 640, 271, 939, 437, 688, 493, 697, 978, 466, 542, 604, 885, 812, 990, 662, 960, 949, 711, 384, 129, 267, 927, 694, 110, 528, 962, 707, 643, 869, 225, 248, 206, 374, 100, 750, 773, 766, 718, 175, 517, 964, 958, 196, 705, 439, 396, 417,  72, 313, 401, 372, 834, 156, 399, 934, 579, 160, 227,  53, 631, 611, 148, 499, 456, 775, 428, 945, 339, 176, 323, 626, 226, 742, 333, 292, 288, 164,  32, 679, 189, 497, 782, 383, 115, 840, 625, 896, 128, 211, 860, 279, 678, 431, 698, 632, 391, 607, 282, 670, 349, 382, 556, 222, 612, 268, 906};

  cout << endl;
  cout << " ======== Large array ======= " << endl;
  cout << endl;
  
   cout<<"My original large array is: "<<endl;
  printList(myArray5,300);

  //selectSort
  count = selectSort(myArray5,69,count);
  cout<<"When ordered with selectSort, after "<<count<<" operations the result is: "<<endl;
  printList(myArray5,7);
  count = 0;

  //insertionSort
  count = insertionSort(myArray6,69,count);
  cout<<"When ordered with insertionSort, after " << count << " operations the result is: " << endl;
  printList(myArray6,7);
  count = 0;

  //bubbleSort
  count = bubbleSort(myArray7,69,count);
  cout<<"When ordered with bubbleSort, after "<<count<<" operations the result is: "<<endl;
  printList(myArray7,7);
  count = 0;

  //quickSort
  count = quickSort(myArray8,0,69,count);
  cout<<"When ordered with quickSort, after "<<count<<" operations the result is: "<<endl;
  printList(myArray8,7);
  count = 0;

  //Begin with large arrays; test with each case and use the same print statements. 

  return 0;
}
